Generators provide an easy way to implement simple iterators without the overhead
or complexity of implementing a class that implements the iterator interface

a generator allows you to write code that uses foreach to iterator over a set of data without needing to build an array in memory,
which may cause you to exceed a memory limit, or require a considerable amount of processing time to generate. 

Instead, you can write a generator function, which is the same as a normal function, 
except that instead of returning once, a generator can YIELD as many times as it needs to in order to 
provide the values to be iterated over.


YIELD:
the heart of a generator function is the yield keyword.
in its simplest form, a yield statement looks much like a return statement, 
except that instead of stopping execution of the function and returning a yield instead provides 
a value to the code looping over the generator and pauses execution of the generator function.

ex
<?php
function gen_one_to_three(){
    for($i=1; $i<=3; $i++){
        yield $i;
    }
}

